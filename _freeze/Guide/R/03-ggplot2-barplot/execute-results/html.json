{
  "hash": "61eeaed0826cd5603acead659f504c29",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"03-ggplot2 绘图——条形图\"\nauthor: \"Simonzhou\"\ndate: \"2025-06-14\"\ndate-modified: today\nformat: \n    html:\n        code-fold: true\n        code-line-numbers: true\n        code-highlight: true\n        fig_caption: true\n        number-sections: true\n        toc: true\n        toc-depth: 3\n---\n\n\n\n\n\n# 绘制基本条形图\n\n## x 是离散型变量\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gcookbook)  # Load gcookbook for the pg_mean data set\nlibrary(ggplot2)\nggplot(pg_mean, aes(x = group, y = weight)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-1-1.png){width=768}\n:::\n:::\n\n\n\n\n\n## x 是连续型变量\n\n### x 是原数的连续的数值型格式\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# There's no entry for Time == 6\nBOD\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Time demand\n1    1    8.3\n2    2   10.3\n3    3   19.0\n4    4   16.0\n5    5   15.6\n6    7   19.8\n```\n\n\n:::\n\n```{.r .cell-code}\n# Time is numeric (continuous)\nstr(BOD)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t6 obs. of  2 variables:\n $ Time  : num  1 2 3 4 5 7\n $ demand: num  8.3 10.3 19 16 15.6 19.8\n - attr(*, \"reference\")= chr \"A1.4, p. 270\"\n```\n\n\n:::\n\n```{.r .cell-code}\n#> 'data.frame':    6 obs. of  2 variables:\n#>  $ Time  : num  1 2 3 4 5 7\n#>  $ demand: num  8.3 10.3 19 16 15.6 19.8\n#>  - attr(*, \"reference\")= chr \"A1.4, p. 270\"\n\nggplot(BOD, aes(x = Time, y = demand)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-2-1.png){width=768}\n:::\n:::\n\n\n\n\n\n### x 转换为因子型变量\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# There's no entry for Time == 6\nBOD\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Time demand\n1    1    8.3\n2    2   10.3\n3    3   19.0\n4    4   16.0\n5    5   15.6\n6    7   19.8\n```\n\n\n:::\n\n```{.r .cell-code}\n# Convert Time to a discrete (categorical) variable with factor()\nggplot(BOD, aes(x = factor(Time), y = demand)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-3-1.png){width=768}\n:::\n:::\n\n\n\n\n\n## 调整配色\n\n在默认的设置下，条形图的填充色为深灰色且条形图没有边框线，用户可以通过调整 `fill` 参数来改变填充色和调整 `colour/color` 参数为条形图添加边框线。\n\n将填充色设置为浅蓝色，边框现的颜色设置为黑色：\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gcookbook)  # Load gcookbook for the pg_mean data set\nlibrary(ggplot2)\nggplot(pg_mean, aes(x = group, y = weight)) +\n  geom_col(fill = \"lightblue\",colour = \"black\")\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-4-1.png){width=768}\n:::\n:::\n\n\n\n\n\n# 绘制簇状条形图\n\n通过将分类变量映射到 `fill` 参数上，运行命令 `geom_col(position = \"dodge\")` 实现。\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gcookbook)  # Load gcookbook for the cabbage_exp data set\n# check dataset\ncabbage_exp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Cultivar Date Weight        sd  n         se\n1      c39  d16   3.18 0.9566144 10 0.30250803\n2      c39  d20   2.80 0.2788867 10 0.08819171\n3      c39  d21   2.74 0.9834181 10 0.31098410\n4      c52  d16   2.26 0.4452215 10 0.14079141\n5      c52  d20   3.11 0.7908505 10 0.25008887\n6      c52  d21   1.47 0.2110819 10 0.06674995\n```\n\n\n:::\n\n```{.r .cell-code}\n# load ggplot2\nlibrary(ggplot2)\nggplot(cabbage_exp, aes(x = Date, y = Weight, fill = Cultivar)) +\n  geom_col(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-5-1.png){width=768}\n:::\n:::\n\n\n\n\n\n## `pastel1` 调色盘\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gcookbook)  # Load gcookbook for the cabbage_exp data set\n# check dataset\ncabbage_exp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Cultivar Date Weight        sd  n         se\n1      c39  d16   3.18 0.9566144 10 0.30250803\n2      c39  d20   2.80 0.2788867 10 0.08819171\n3      c39  d21   2.74 0.9834181 10 0.31098410\n4      c52  d16   2.26 0.4452215 10 0.14079141\n5      c52  d20   3.11 0.7908505 10 0.25008887\n6      c52  d21   1.47 0.2110819 10 0.06674995\n```\n\n\n:::\n\n```{.r .cell-code}\n# load ggplot2\nlibrary(ggplot2)\nggplot(cabbage_exp, aes(x = Date, y = Weight, fill = Cultivar)) +\n  geom_col(position = \"dodge\", colour = \"black\") +\n  scale_fill_brewer(palette = \"Pastel1\")\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-6-1.png){width=768}\n:::\n:::\n\n\n\n\n\n## 缺失项\n\n如果分类变量各水平的组合中有缺失项，那么绘图结果中的条形则相应地略去不绘，同时，临近的条形将自动扩充到相应的位置，示例如下：\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gcookbook)  # Load gcookbook for the cabbage_exp data set\n# check dataset\ncabbage_exp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Cultivar Date Weight        sd  n         se\n1      c39  d16   3.18 0.9566144 10 0.30250803\n2      c39  d20   2.80 0.2788867 10 0.08819171\n3      c39  d21   2.74 0.9834181 10 0.31098410\n4      c52  d16   2.26 0.4452215 10 0.14079141\n5      c52  d20   3.11 0.7908505 10 0.25008887\n6      c52  d21   1.47 0.2110819 10 0.06674995\n```\n\n\n:::\n\n```{.r .cell-code}\n# delete last row\nce <- cabbage_exp[1:5,]\nce\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Cultivar Date Weight        sd  n         se\n1      c39  d16   3.18 0.9566144 10 0.30250803\n2      c39  d20   2.80 0.2788867 10 0.08819171\n3      c39  d21   2.74 0.9834181 10 0.31098410\n4      c52  d16   2.26 0.4452215 10 0.14079141\n5      c52  d20   3.11 0.7908505 10 0.25008887\n```\n\n\n:::\n\n```{.r .cell-code}\n# load ggplot2\nlibrary(ggplot2)\nggplot(ce, aes(x = Date, y = Weight, fill = Cultivar)) +\n  geom_col(position = \"dodge\", colour = \"black\") +\n  scale_fill_brewer(palette = \"Pastel1\")\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-7-1.png){width=768}\n:::\n:::\n\n\n\n\n\n# 绘制频数条形图\n\n## 使用 `geom_bar()` 函数\n\n使用 `geom_bar()` 函数，同时不映射任何变量到y参数\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Equivalent to using geom_bar(stat = \"bin\")\nggplot(diamonds, aes(x = cut)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-8-1.png){width=768}\n:::\n:::\n\n\n\n\n\n## 条形图着色\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gcookbook) # Load gcookbook for the uspopchange data set\nlibrary(dplyr)\n\n# select top 10 state with population growth\nupc <- uspopchange %>%\n  arrange(desc(Change)) %>%\n  slice(1:10)\n\nupc\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            State Abb Region Change\n1          Nevada  NV   West   35.1\n2         Arizona  AZ   West   24.6\n3            Utah  UT   West   23.8\n4           Idaho  ID   West   21.1\n5           Texas  TX  South   20.6\n6  North Carolina  NC  South   18.5\n7         Georgia  GA  South   18.3\n8         Florida  FL  South   17.6\n9        Colorado  CO   West   16.9\n10 South Carolina  SC  South   15.3\n```\n\n\n:::\n:::\n\n\n\n\n\n将 Region 映射到 fill 是上兵绘制条形图：\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(upc, aes(x = Abb, y = Change, fill = Region)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-10-1.png){width=768}\n:::\n:::\n\n\n\n\n\n### 设定图形颜色\n\n借助函数 `scale_fill_brewer()` or `scale_fill_manual()` 重新设定图形颜色：\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(upc, aes(x = reorder(Abb, Change), y = Change, fill = Region)) +\n  geom_col(colour = \"black\") +\n  scale_fill_manual(values = c(\"#669933\", \"#FFCC66\")) +\n  xlab(\"State\")\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-11-1.png){width=768}\n:::\n:::\n\n\n\n\n\n### 注意\n\n颜色的映射是在 `aes()` 内部完成的，但是颜色的设定是在 `aes()` 外部完成的。\n\n# 对正负条形图分别着色\n\n首先创建一个取值正负性进行标识的变量 `pos` :\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gcookbook) # Load gcookbook for the climate data set\nlibrary(dplyr)\n\nclimate_sub <- climate %>%\n  filter(Source == \"Berkeley\" & Year >= 1900) %>%\n  mutate(pos = Anomaly10y >= 0)\n\n# 展示前10行\nprint(\"前10行数据：\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"前10行数据：\"\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(climate_sub, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Source Year Anomaly1y Anomaly5y Anomaly10y Unc10y   pos\n1  Berkeley 1900        NA        NA     -0.171  0.108 FALSE\n2  Berkeley 1901        NA        NA     -0.162  0.109 FALSE\n3  Berkeley 1902        NA        NA     -0.177  0.108 FALSE\n4  Berkeley 1903        NA        NA     -0.199  0.104 FALSE\n5  Berkeley 1904        NA        NA     -0.223  0.105 FALSE\n6  Berkeley 1905        NA        NA     -0.241  0.107 FALSE\n7  Berkeley 1906        NA        NA     -0.294  0.106 FALSE\n8  Berkeley 1907        NA        NA     -0.312  0.105 FALSE\n9  Berkeley 1908        NA        NA     -0.328  0.103 FALSE\n10 Berkeley 1909        NA        NA     -0.281  0.101 FALSE\n```\n\n\n:::\n:::\n\n\n\n\n\n## `pos` 映射到 `fill` 中\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(climate_sub, aes(x = Year, y = Anomaly10y, fill = pos)) +\n  geom_col(position = \"identity\")\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-13-1.png){width=768}\n:::\n:::\n\n\n\n\n\n### 注意\n\n这里条形图的参数设定为 `position = \"identity\"` ，可以避免系统因对负值绘制堆积条形而发出的警告信息。\n\n## 调整配色\n\n### `scale_fill_manual()` 参数\n\n设定 `scale_fill_manual()` 参数对图形进行调整，设定参数 `guide = FALSE` 可以删除图例；设定边框颜色（color/colour）和边框线宽度（size），这里边框线的单位是毫米。\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(climate_sub, aes(x = Year, y = Anomaly10y, fill = pos)) +\n  geom_col(position = \"identity\", colour = \"black\", size = 0.25) +\n  scale_fill_manual(values = c(\"#CCEEFF\", \"#FFDDDD\"), guide = FALSE)\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-14-1.png){width=768}\n:::\n:::\n\n\n\n\n\n出现警告信息（Warning messages）\n\n调整后：\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(climate_sub, aes(x = Year, y = Anomaly10y, fill = pos)) +\n  geom_col(position = \"identity\", colour = \"black\", linewidth = 0.25) +\n  scale_fill_manual(values = c(\"#CCEEFF\", \"#FFDDDD\"), guide = \"none\")\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-15-1.png){width=768}\n:::\n:::\n\n\n\n\n\n# 调整条形宽度和条形间距\n\n通过设定 `geom_bar()` 函数的参数 `width` 来使条形变得更宽或更窄，该参数默认函数为 0.9，更大的值会使条形更宽，反之更窄（细）。\n\n## 标准宽度\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gcookbook) # Load gcookbook for the pg_mean data set\nlibrary(ggplot2)\nggplot(pg_mean, aes(x = group, y = weight)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-16-1.png){width=768}\n:::\n:::\n\n\n\n\n\n## 更窄\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gcookbook) # Load gcookbook for the pg_mean data set\nlibrary(ggplot2)\nggplot(pg_mean, aes(x = group, y = weight)) +\n  geom_col(width = 0.5)\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-17-1.png){width=768}\n:::\n:::\n\n\n\n\n\n## 更宽\n\n条形宽度的最大宽度值为1.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gcookbook) # Load gcookbook for the pg_mean data set\nlibrary(ggplot2)\nggplot(pg_mean, aes(x = group, y = weight)) +\n  geom_col(width = 1)\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-18-1.png){width=768}\n:::\n:::\n\n\n\n\n\n## 调整组内间距\n\n簇状条形图默认组内间距为0，如果希望增加组内间距，可以通过将 `width()` 的值设定的小一些，并将 `position_dodge()` 的值设定大于 `width()` 来实现。\n\n### 条形更窄的簇状条形图\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cabbage_exp, aes(x = Date, y = Weight, fill = Cultivar)) +\n  geom_col(width = 0.5, position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-19-1.png){width=768}\n:::\n:::\n\n\n\n\n\n### 具有条形间距的簇状条形图\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cabbage_exp, aes(x = Date, y = Weight, fill = Cultivar)) +\n  geom_col(width = 0.5, position = position_dodge(0.7))\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-20-1.png){width=768}\n:::\n:::\n\n\n\n\n\n### `position` 语法\n\n以下四条命令是等价的：\n\n``` r\ngeom_bar(position = \"dodge\")\ngeom_bar(width = 0.9, position = position_dodge())\ngeom_bar(position = position_dodge(0.9))\ngeom_bar(width = 0.9, position = position_dodge(width=0.9))\n```\n\n# 绘制堆积条形图\n\n## 使用 `geom_bar()` 函数\n\n使用 `geom_bar()` 函数，并映射一个变量给填充色参数 `fill` 即可，该命令会将 Date 对应到 x 轴上，并以 Cultivar 作为填充色\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gcookbook) # Load gcookbook for the cabbage_exp data set\nlibrary(ggplot2)\nggplot(cabbage_exp, aes(x = Date, y = Weight, fill = Cultivar)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](03-ggplot2-barplot_files/figure-html/unnamed-chunk-21-1.png){width=768}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}