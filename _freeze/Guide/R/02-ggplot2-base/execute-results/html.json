{
  "hash": "404d2b0023a23806b659819b5472579b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"02-ggplot2 绘图基础\"\nauthor: \"Simonzhou\"\ndate: \"2025-06-08\"\ndate-modified: today\nformat: \n    html:\n        code-fold: true\n        code-line-numbers: true\n        code-highlight: true\n        fig_caption: true\n        number-sections: true\n        toc: true\n        toc-depth: 3\n---\n\n\n\n\n# 笔记与练习参考\n\nR 可视化的内容主要来源于 \\[R Graphics Cookbook, 2nd edition\\](<https://r-graphics.org/>) 和 \\[[**Beautiful-Visualization-with-R**](https://github.com/EasyChart/Beautiful-Visualization-with-R)\\]([https://github.com/EasyChart/Beautiful-Visualization-with-R](#0){style=\"font-size: 13pt; font-weight: var(--fontWeightRegular);\"})[@Zhang2019r]\n\n# 准备工作\n\nggplot2 绘图基础需要安装 `ggplot2`,`dplyr`,`gcookbook`三个包，其中`gcookbook`包含了需要使用的数据集。\n\n## 安装package\n\n可以通过如下方式安装：\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")\ninstall.packages(\"gcookbook\")\n```\n:::\n\n\n\n\n## 载入package\n\n在每个R会话中，需要再运行代码之前加载这几个包：\n\n`{r，eval=false} library(tidyverse) library(gcookbook)`\n\n### 注意\n\n运行`library(tidyverse)`会加载 `ggplot2`,`dplyr`等许多其他包，如果想要R会话更加流畅高效，可以分别加载`ggplot2`,`dplyr`,`gcookbook`等。\n\n## 更新package\n\n运行 `update.packages()` 可以查看那些包可以被更新，如果想要不加提示的更新说有的package，可以加入参数：`ask=FALSE`。\n\n`{r，eval=FALSE} update.packages(ask=FALSE)`\n\n### 注意\n\n一般来说package的作者会发布一些新版本来修复旧版本中的问题，并提供一些新特征或功能，通常是建议将packages更新到最新版。但是有时候可能会出现一些bug或package之间的冲突，可以通过版本控制/构建虚拟环境来进行解决。\n\n## 加载以符号分隔的文本文件\n\n1.  一般的加载语法\n\n``` r\ndata <- read.csv(\"dataname.csv\")\n```\n\n2.  render 包中的 `read_csv()` 函数，这个函数的运行速度比 `read.csv()` 快很多，且更适合处理字符串、日期和时间数据。\n3.  如果数据文件首列没有列明：\n\n``` r\ndata <- read.csv(\"dataname.csv\",header = FALSE)\n# 手动为列名赋值\nnames(data) <- c(\"colum_1\",\"colum_2\",\"colum_3\"...)\n```\n\n## 从Excel文件中加载数据\n\n可以使用 `readxl` 包中的 `read_excel()` 函数用于读取 `.xls`、`.xlsx`等Excel文件。\n\n``` r\n# just install once\n# install.packages(\"readxl\")\n\nlibrary(readxl)\ndata <- read_excel(\"data_name.xlsx\",1)\n\n# designate the sheet\ndata <- read_excel(\"data_name.xlsx\",sheet = sheet_number)\ndata <- read_excel(\"data_name.xlsx\",sheet = sheet_name)\n```\n\n`read_excel()` 默认使用工作标的第一行作为列名，如果不想以第一行作为列名，可以设置参数 `col_names = FALSE` ，相应的，各列会被命名为 X1,X2 等。\n\n## 从SPSS/SAS/Stata文件中加载数据\n\n### 使用 `haven` 包中的函数\n\n``` r\n# just install once\n# install.packages(\"haven\")\n\nlibrary(haven)\n#for SPSS\ndata <- read_sav(\"data_name.sav\")\n#for SAS\ndata <- read_sas(\"data_name.sas7bdat\")\n#for Stata\ndata <- read_dta(\"data_name.dta\")\n```\n\n### 使用 `foreign` 包替代\n\n这个同样支持 SPSS 和 Stata 数据，但是这个包更新缓慢。\n\n它还可以支持octave/MATLAB,SYSTAT,SAS XPORT等数据的读取。\n\n通过 `ls(\"package:foreign\")` 查看所有的函数列表。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"foreign\")\nlibrary(foreign)\nls(\"package:foreign\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"data.restore\"  \"lookup.xport\"  \"read.arff\"     \"read.dbf\"     \n [5] \"read.dta\"      \"read.epiinfo\"  \"read.mtp\"      \"read.octave\"  \n [9] \"read.S\"        \"read.spss\"     \"read.ssd\"      \"read.systat\"  \n[13] \"read.xport\"    \"write.arff\"    \"write.dbf\"     \"write.dta\"    \n[17] \"write.foreign\"\n```\n\n\n:::\n:::\n\n\n\n\n``` r\nls(\"package:foreign\")\n [1] \"data.restore\"  \"lookup.xport\"  \"read.arff\"     \"read.dbf\"     \n [5] \"read.dta\"      \"read.epiinfo\"  \"read.mtp\"      \"read.octave\"\n [9] \"read.S\"        \"read.spss\"     \"read.ssd\"      \"read.systat\"\n[13] \"read.xport\"    \"write.arff\"    \"write.dbf\"     \"write.dta\"\n[17] \"write.foreign\"\n```\n\n## 链接函数和管道操作符 `%>%`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\n# view the morley dataset\nmorley\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Expt Run Speed\n001    1   1   850\n002    1   2   740\n003    1   3   900\n004    1   4  1070\n005    1   5   930\n006    1   6   850\n007    1   7   950\n008    1   8   980\n009    1   9   980\n010    1  10   880\n011    1  11  1000\n012    1  12   980\n013    1  13   930\n014    1  14   650\n015    1  15   760\n016    1  16   810\n017    1  17  1000\n018    1  18  1000\n019    1  19   960\n020    1  20   960\n021    2   1   960\n022    2   2   940\n023    2   3   960\n024    2   4   940\n025    2   5   880\n026    2   6   800\n027    2   7   850\n028    2   8   880\n029    2   9   900\n030    2  10   840\n031    2  11   830\n032    2  12   790\n033    2  13   810\n034    2  14   880\n035    2  15   880\n036    2  16   830\n037    2  17   800\n038    2  18   790\n039    2  19   760\n040    2  20   800\n041    3   1   880\n042    3   2   880\n043    3   3   880\n044    3   4   860\n045    3   5   720\n046    3   6   720\n047    3   7   620\n048    3   8   860\n049    3   9   970\n050    3  10   950\n051    3  11   880\n052    3  12   910\n053    3  13   850\n054    3  14   870\n055    3  15   840\n056    3  16   840\n057    3  17   850\n058    3  18   840\n059    3  19   840\n060    3  20   840\n061    4   1   890\n062    4   2   810\n063    4   3   810\n064    4   4   820\n065    4   5   800\n066    4   6   770\n067    4   7   760\n068    4   8   740\n069    4   9   750\n070    4  10   760\n071    4  11   910\n072    4  12   920\n073    4  13   890\n074    4  14   860\n075    4  15   880\n076    4  16   720\n077    4  17   840\n078    4  18   850\n079    4  19   850\n080    4  20   780\n081    5   1   890\n082    5   2   840\n083    5   3   780\n084    5   4   810\n085    5   5   760\n086    5   6   810\n087    5   7   790\n088    5   8   810\n089    5   9   820\n090    5  10   850\n091    5  11   870\n092    5  12   870\n093    5  13   810\n094    5  14   740\n095    5  15   810\n096    5  16   940\n097    5  17   950\n098    5  18   800\n099    5  19   810\n100    5  20   870\n```\n\n\n:::\n\n```{.r .cell-code}\nmorley %>% filter(Expt == 1) %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Expt        Run            Speed     \n Min.   :1   Min.   : 1.00   Min.   : 650  \n 1st Qu.:1   1st Qu.: 5.75   1st Qu.: 850  \n Median :1   Median :10.50   Median : 940  \n Mean   :1   Mean   :10.50   Mean   : 909  \n 3rd Qu.:1   3rd Qu.:15.25   3rd Qu.: 980  \n Max.   :1   Max.   :20.00   Max.   :1070  \n```\n\n\n:::\n:::\n\n\n\n\n### 普通函数\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(filter(morley,Expt == 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Expt        Run            Speed     \n Min.   :1   Min.   : 1.00   Min.   : 650  \n 1st Qu.:1   1st Qu.: 5.75   1st Qu.: 850  \n Median :1   Median :10.50   Median : 940  \n Mean   :1   Mean   :10.50   Mean   : 909  \n 3rd Qu.:1   3rd Qu.:15.25   3rd Qu.: 980  \n Max.   :1   Max.   :20.00   Max.   :1070  \n```\n\n\n:::\n:::\n\n\n\n\n## 绘制散点图\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(mtcars$wt,mtcars$mpg)\n```\n\n::: {.cell-output-display}\n![](02-ggplot2-base_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n使用 `ggplot2` 绘制\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(mtcars,aes(x = wt,y = mpg))+\ngeom_point()\n```\n\n::: {.cell-output-display}\n![](02-ggplot2-base_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n## 绘制折线图\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(pressure$temperature,pressure$pressure,type = \"l\")\n```\n\n::: {.cell-output-display}\n![](02-ggplot2-base_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n### 增加数据点和多条折线\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(pressure$temperature,pressure$pressure,type = \"l\")\npoints(pressure$temperature,pressure$pressure)\n\nlines(pressure$temperature,pressure$pressure/2,col = \"red\")\npoints(pressure$temperature,pressure$pressure/2,col = \"red\")\n```\n\n::: {.cell-output-display}\n![](02-ggplot2-base_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n### `ggplot2` 中的 `geom_line()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(pressure,aes(x = temperature,y = pressure))+\ngeom_line()\n```\n\n::: {.cell-output-display}\n![](02-ggplot2-base_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(pressure,aes(x = temperature,y = pressure))+\ngeom_line()+\ngeom_point()\n```\n\n::: {.cell-output-display}\n![](02-ggplot2-base_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}