{
  "hash": "2a5b29f114a670618a4e04e744a83ad1",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"用Python做生存分析和COX回归\"\noutput: \n  html:\n    code-fold: false\n    code-tools: true\nnumber-sections: true\ntoc: true\ndate: \"2025-03-09\"\nauthor: \"Simonzhou\"\njupyter: python3\nexecute:\n  enabled: true\n  echo: true      # 在输出中显示代码\n  eval: true      # 执行代码\n  warning: false  # 隐藏警告信息\n  message: false  # 隐藏消息\ntags:\n  - \"Python\"\n  - \"数据可视化\"\n---\n\n# 生存分析\n\n生存分析（survival analysis）是一种统计方法，用于分析时间数据， 主要研究生存时间和结局的分布及其影响因素的统计方法。在生存分析中，每个研究对象的结局变量由 \"time\"（生存时间） 和 \"status\"（生存状态）组成。生存时间是指从某个特定时间点开始，到某个事件的节点时，事件数据是指某个事件是否发生。 生存时间是一个非负实数，生存状态是一个二元变量，通常用1表示事件发生，0表示事件未发生。\n\n生存分析的主要应用领域是医学、生物学、工程学、经济学等。\n\n## 生存函数\n\n生存函数（survival function）是生存分析的基本概念之一，它是一个函数，用于刻画研究对象在某个时刻 t 内存存活的概率。 生存函数通常用 $S(t)$ 表示。\n\n风险函数（hazard function）是生存分析的另一个基本概念，用于刻画研究对象在某个时刻 t 还存活但是极短的时间内死亡的风险。 风险函数通常用 $h(t)$ 表示。\n\n如果记寿命分布的密度为 $f(t)$，则有： $h(t) = f(t) / S(t)$ 。\n\n## 数据集及来源\n\n这里使用 R 语言 `survival` 包中的 `ovarian` 数据集，该数据集来自一项比较卵巢癌患者在两种治疗方式下的生存率比较的随机对照试验。\n\n首先找到 `ovarian` 数据集，你可以从互联网上寻找相关资源；或者从 R 的 `survival` 包中导出这一数据集，操作如下：\n\n``` r\n# install.packages(\"survival\")\nlibrary(survival)\novarian\ndata(cancer, package=\"survival\")\n\ndf <- ovarian\nwrite.csv(df, \"your-file-path\\\\ovarian.csv\", row.names = FALSE)\n```\n\n将数据集下载到你的工作目录，然后使用 Pandas 导入与读取：\n\n::: {#93ae1843 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\novarian = pd.read_csv(r\"C:\\Users\\asus\\Desktop\\R\\quarto\\Med-Stat-Notes\\Data\\ovarian.csv\")\novarian.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>futime</th>\n      <th>fustat</th>\n      <th>age</th>\n      <th>resid.ds</th>\n      <th>rx</th>\n      <th>ecog.ps</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>59</td>\n      <td>1</td>\n      <td>72.3315</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>115</td>\n      <td>1</td>\n      <td>74.4932</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>156</td>\n      <td>1</td>\n      <td>66.4658</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>421</td>\n      <td>0</td>\n      <td>53.3644</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>431</td>\n      <td>1</td>\n      <td>50.3397</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n数据集包括 26 个观测值，6 个变量。变量如下：`futime`（随访时间），`fustat`（研究结束时的状态：0 表示存活，1表示死亡），`age`（患者的年龄），`resid.ds`（疾病残留情况：1 表示有残留，2 表示没有残留），`rx`（治疗方式：1 表示环磷酰胺，2 表示环磷酰胺+阿霉素）和 `ecog.ps`（患者的 ECOG 评分：1 表示较好，2 表示较差）。\n\n对年龄进行分组，分为 `<50` 和 `>50` 两组，并将其他三个变量的各水平加上相应的标签。\n\n::: {#b20f97b9 .cell execution_count=2}\n``` {.python .cell-code}\n# 查看 ovarian(DataFrame)的变量名，因为不同的渠道下载的 Dataset 可能会有区别\nprint(ovarian.columns)\n\n# 将 age 列转换为数值类型\novarian['age'] = pd.to_numeric(ovarian['age'], errors='coerce')\n\novarian.age = pd.cut(ovarian.age, [0,50,75], labels = ['<=50','>50'])\n\novarian['resid.ds'] = ovarian['resid.ds'].map({1: \"NO\", 2: \"Yes\"})\novarian['rx'] = ovarian['rx'].map({1: \"A\", 2: \"B\"})\novarian['ecog.ps'] = ovarian['ecog.ps'].map({1: \"Good\", 2: \"Bad\"})\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nIndex(['futime', 'fustat', 'age', 'resid.ds', 'rx', 'ecog.ps'], dtype='object')\n```\n:::\n:::\n\n\n## 生存率的 Kaplan-Meier 估计\n\n生存率的 Kaplan-Meier 估计的计算可以调用 `lifelines` 库中的 `KaplanMeierFitter` 函数实现。\n\n`pip` 安装：`pip install lifelines`\n\n`conda` 安装： `conda install lifelines`\n\n拟合 `fit` :\n\n::: {#8de0398b .cell execution_count=3}\n``` {.python .cell-code}\nfrom lifelines import KaplanMeierFitter\nkmf = KaplanMeierFitter()\nfit = kmf.fit(ovarian.futime,ovarian.fustat)\nfit\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n<lifelines.KaplanMeierFitter:\"KM_estimate\", fitted with 26 total observations, 14 right-censored observations>\n```\n:::\n:::\n\n\n拟合结果 `fit` 包含了很多属性，我们可以通过点操作符单独提取其中的属性。例如，查看中位生存时间：\n\n::: {#f93310fe .cell execution_count=4}\n``` {.python .cell-code}\nfit.median_survival_time_\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n638.0\n```\n:::\n:::\n\n\n中位数生存时间表示，有 50% 的患者生存时间达到了 638 天。还可以提取寿命表和生存函数等属性，通过以下方式实现合并查看：\n\n::: {#c7e40915 .cell execution_count=5}\n``` {.python .cell-code}\npd.concat([fit.event_table,fit.survival_function_], axis = 1)\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>removed</th>\n      <th>observed</th>\n      <th>censored</th>\n      <th>entrance</th>\n      <th>at_risk</th>\n      <th>KM_estimate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0.0</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>26</td>\n      <td>26</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>59.0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>26</td>\n      <td>0.961538</td>\n    </tr>\n    <tr>\n      <th>115.0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>25</td>\n      <td>0.923077</td>\n    </tr>\n    <tr>\n      <th>156.0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24</td>\n      <td>0.884615</td>\n    </tr>\n    <tr>\n      <th>268.0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0.846154</td>\n    </tr>\n    <tr>\n      <th>329.0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>22</td>\n      <td>0.807692</td>\n    </tr>\n    <tr>\n      <th>353.0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>21</td>\n      <td>0.769231</td>\n    </tr>\n    <tr>\n      <th>365.0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>20</td>\n      <td>0.730769</td>\n    </tr>\n    <tr>\n      <th>377.0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>19</td>\n      <td>0.730769</td>\n    </tr>\n    <tr>\n      <th>421.0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>18</td>\n      <td>0.730769</td>\n    </tr>\n    <tr>\n      <th>431.0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17</td>\n      <td>0.687783</td>\n    </tr>\n    <tr>\n      <th>448.0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>16</td>\n      <td>0.687783</td>\n    </tr>\n    <tr>\n      <th>464.0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>15</td>\n      <td>0.641931</td>\n    </tr>\n    <tr>\n      <th>475.0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>14</td>\n      <td>0.596078</td>\n    </tr>\n    <tr>\n      <th>477.0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>13</td>\n      <td>0.596078</td>\n    </tr>\n    <tr>\n      <th>563.0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>12</td>\n      <td>0.546405</td>\n    </tr>\n    <tr>\n      <th>638.0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>11</td>\n      <td>0.496732</td>\n    </tr>\n    <tr>\n      <th>744.0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>10</td>\n      <td>0.496732</td>\n    </tr>\n    <tr>\n      <th>769.0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>9</td>\n      <td>0.496732</td>\n    </tr>\n    <tr>\n      <th>770.0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>8</td>\n      <td>0.496732</td>\n    </tr>\n    <tr>\n      <th>803.0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7</td>\n      <td>0.496732</td>\n    </tr>\n    <tr>\n      <th>855.0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>6</td>\n      <td>0.496732</td>\n    </tr>\n    <tr>\n      <th>1040.0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>5</td>\n      <td>0.496732</td>\n    </tr>\n    <tr>\n      <th>1106.0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>4</td>\n      <td>0.496732</td>\n    </tr>\n    <tr>\n      <th>1129.0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0.496732</td>\n    </tr>\n    <tr>\n      <th>1206.0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0.496732</td>\n    </tr>\n    <tr>\n      <th>1227.0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.496732</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### 绘制生存曲线\n\nKaplan-Meier 法估计的生存率是一个阶梯状的函数，其阶梯跳跃点是给定的时间点，我们可以通过调用 plot 方法绘制生存曲线，如图所示：\n\n::: {#660a4f38 .cell execution_count=6}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nfit.plot(show_censors = True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](25-03-09-cos-reg_files/figure-html/cell-7-output-1.png){width=571 height=429}\n:::\n:::\n\n\n## 生存率的比较\n\n在生存分析中，经常需要比较不同情形下的生存率。在本例中，想要比较不同治疗方式下生存率，可以输入下面的命令：\n\n::: {#7b0ed3b8 .cell execution_count=7}\n``` {.python .cell-code}\ng1 = ovarian.rx == \"A\"\ng2 = ovarian.rx == \"B\"\nkmf_A = KaplanMeierFitter()\nkmf_A.fit(ovarian.futime[g1],ovarian.fustat[g1],label = \"Treatmeat A\")\nkmf_B = KaplanMeierFitter()\nkmf_B.fit(ovarian.futime[g2],ovarian.fustat[g2],label = \"Treatmeat B\")\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n<lifelines.KaplanMeierFitter:\"Treatmeat B\", fitted with 13 total observations, 8 right-censored observations>\n```\n:::\n:::\n\n\n### Kaplan-Meier 比较图\n\n可以单独提取两组的生存函数进行比较，但在同一个图中显示多条生存曲线更有助于生存率的比较。\n\n::: {#bbb93983 .cell execution_count=8}\n``` {.python .cell-code}\nfig, axes = plt.subplots()\nkmf_A.plot(ax = axes,show_censors = True)\nkmf_B.plot(ax = axes,show_censors = True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](25-03-09-cos-reg_files/figure-html/cell-9-output-1.png){width=571 height=429}\n:::\n:::\n\n\n从上图中可以看出，治疗方式 “B” 的生存率高于治疗方式 “A” 的生存率，但是这种差异是由随机误差引起还是真是的治疗方式的不同所造成的差异，需要做进一步的统计学检验。\n\n![因果关联的推断步骤](images/Causal-association.jpg)\n\n### 统计学检验\n\n生存分析中常用的统计学检验是 时序检验（log rank test），其基本思想是先计算出不同时间两种治疗方式的暴露人数和死亡人数，并由此在两种治疗方式效果相同的假设下计算出预期死亡人数，如果不拒绝零假设（ $H_0$ ：两种治疗方式的效果相同，即预期死亡人数一致），则实际观测值和期望值的差异不会很大，如果差异过大则不能认为该差异是由随机误差引起的。\n\n对此，用 $\\chi^2$ 检验做判断。时序检验可以用 `lifetimes` 库的函数 `logrank_test` 实现。\n\n::: {#d86c0d93 .cell execution_count=9}\n``` {.python .cell-code}\nfrom lifelines.statistics import logrank_test\nlr = logrank_test(ovarian.futime[g1], ovarian.futime[g2],\n                  ovarian.fustat[g1], ovarian.fustat[g2])\nlr.p_value\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\n0.3025911169890923\n```\n:::\n:::\n\n\n这里得到的结果为 $P>0.05$ ，在一般情况下，我们会认为这是没有统计学意义的，即无法排除差异是由随机误差引起的。\n\n这种结果不显著的情况下，我们可以做一些思考，即是否有其他因素干预了结果的显著性，以及是否是样本量过小，导致差异不显著。（样本量的大小会影响检验效能，如果检验效能太低，即使有差异，也很难被检验方法发现）\n\n这里我们无法改变样本量的大小，但是可以考虑其他混杂因素的影响，并且使用更全面的模型进行检验。\n\n# Cox 回归\n\n所有的参数回归模型需要对风险函数做出假设，这些模型可以对每个时间点的生存概率进行估计。而 Cox 回归没有关于风险函数的假设，他所遵循的唯一重要假设是 “比例风险” 。\n\n$$\nh(t,X)=h_0(t)e^{\\sum{\\beta_i}{X_i}}\n$$\n\n等式左边表示风险收时间和自变量的影响，等式右边的 $h_0(t)$ 是所有自变量 $X_i$ 都为 0 时的基线风险函数， $e^{\\sum{\\beta_i}{X_i}}$ 表示所有自变量 $X_i$ 和对应的估计系数 $\\beta_i$ 的乘积之和。\n\n因此有：\n\n$$\n\\frac{h(t,X)}{h_0(t)}=e^{\\sum{\\beta_i}{X_i}}\n$$\n\n## 建立模型\n\n在建立模型前，需要对分类变量进行哑变量处理：\n\n::: {#e75aaada .cell execution_count=10}\n``` {.python .cell-code}\ndf_dummy = pd.get_dummies(ovarian,drop_first = True)\ndf_dummy.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>futime</th>\n      <th>fustat</th>\n      <th>age_&gt;50</th>\n      <th>resid.ds_Yes</th>\n      <th>rx_B</th>\n      <th>ecog.ps_Good</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>59</td>\n      <td>1</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>115</td>\n      <td>1</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>156</td>\n      <td>1</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>421</td>\n      <td>0</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>431</td>\n      <td>1</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n使用 `drop_first = True` 参数是为了去掉各个参考类别。\n\n下面将所有的协变量都纳入，建立 Cox 回归模型：\n\n::: {#336ea3ae .cell execution_count=11}\n``` {.python .cell-code}\nfrom lifelines import CoxPHFitter\ncox = CoxPHFitter()\ncox.fit(df_dummy,duration_col = 'futime', event_col = 'fustat')\ncox.print_summary()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>model</th>\n      <td>lifelines.CoxPHFitter</td>\n    </tr>\n    <tr>\n      <th>duration col</th>\n      <td>'futime'</td>\n    </tr>\n    <tr>\n      <th>event col</th>\n      <td>'fustat'</td>\n    </tr>\n    <tr>\n      <th>baseline estimation</th>\n      <td>breslow</td>\n    </tr>\n    <tr>\n      <th>number of observations</th>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>number of events observed</th>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>partial log-likelihood</th>\n      <td>-28.89</td>\n    </tr>\n    <tr>\n      <th>time fit was run</th>\n      <td>2025-08-03 06:50:54 UTC</td>\n    </tr>\n  </tbody>\n</table>\n</div><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th style=\"min-width: 12px;\"></th>\n      <th style=\"min-width: 12px;\">coef</th>\n      <th style=\"min-width: 12px;\">exp(coef)</th>\n      <th style=\"min-width: 12px;\">se(coef)</th>\n      <th style=\"min-width: 12px;\">coef lower 95%</th>\n      <th style=\"min-width: 12px;\">coef upper 95%</th>\n      <th style=\"min-width: 12px;\">exp(coef) lower 95%</th>\n      <th style=\"min-width: 12px;\">exp(coef) upper 95%</th>\n      <th style=\"min-width: 12px;\">cmp to</th>\n      <th style=\"min-width: 12px;\">z</th>\n      <th style=\"min-width: 12px;\">p</th>\n      <th style=\"min-width: 12px;\">-log2(p)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>age_&gt;50</th>\n      <td>2.20</td>\n      <td>9.04</td>\n      <td>1.11</td>\n      <td>0.03</td>\n      <td>4.37</td>\n      <td>1.03</td>\n      <td>79.10</td>\n      <td>0.00</td>\n      <td>1.99</td>\n      <td>0.05</td>\n      <td>4.42</td>\n    </tr>\n    <tr>\n      <th>resid.ds_Yes</th>\n      <td>1.45</td>\n      <td>4.25</td>\n      <td>0.73</td>\n      <td>0.02</td>\n      <td>2.88</td>\n      <td>1.02</td>\n      <td>17.75</td>\n      <td>0.00</td>\n      <td>1.98</td>\n      <td>0.05</td>\n      <td>4.40</td>\n    </tr>\n    <tr>\n      <th>rx_B</th>\n      <td>-1.38</td>\n      <td>0.25</td>\n      <td>0.64</td>\n      <td>-2.65</td>\n      <td>-0.12</td>\n      <td>0.07</td>\n      <td>0.89</td>\n      <td>0.00</td>\n      <td>-2.14</td>\n      <td>0.03</td>\n      <td>4.96</td>\n    </tr>\n    <tr>\n      <th>ecog.ps_Good</th>\n      <td>-0.59</td>\n      <td>0.56</td>\n      <td>0.63</td>\n      <td>-1.83</td>\n      <td>0.65</td>\n      <td>0.16</td>\n      <td>1.92</td>\n      <td>0.00</td>\n      <td>-0.93</td>\n      <td>0.35</td>\n      <td>1.50</td>\n    </tr>\n  </tbody>\n</table><br><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>Concordance</th>\n      <td>0.79</td>\n    </tr>\n    <tr>\n      <th>Partial AIC</th>\n      <td>65.78</td>\n    </tr>\n    <tr>\n      <th>log-likelihood ratio test</th>\n      <td>12.19 on 4 df</td>\n    </tr>\n    <tr>\n      <th>-log2(p) of ll-ratio test</th>\n      <td>5.97</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n结果显示，在调整了协变量后，两种治疗方式的死亡风险的差异具有统计学意义（P\\<0.05）。\n\n模型的回归系数及其置信区间可以通过 plot 方法进行直观展示：\n\n::: {#5973f1f1 .cell execution_count=12}\n``` {.python .cell-code}\ncox.plot()\n```\n\n::: {.cell-output .cell-output-display}\n![](25-03-09-cos-reg_files/figure-html/cell-13-output-1.png){width=643 height=429}\n:::\n:::\n\n\nCox 回归是一种半参数回归模型，也像多元线性回归一样，存在变量选择的问题。通常可以用 AIC 进行变量选择。[^1]\n\n[^1]: 赤池信息量准则，即Akaike information criterion，简称AIC，是衡量统计模型拟合优良性的一种标准，是由日本统计学家赤池弘次创立和发展的。赤池信息量准则建立在熵的概念基础上。\\\n    **AIC越小，模型越好，通常选择AIC最小的模型**\n\n查看当前模型的 AIC 值：\n\n::: {#cc806642 .cell execution_count=13}\n``` {.python .cell-code}\ncox.AIC_partial_\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\n65.77513405570859\n```\n:::\n:::\n\n\n根据前序的结果，变量 `ecog.ps` 对应的 *P* 值最大，对其进行剔除后再次拟合模型：\n\n::: {#9bd8cff6 .cell execution_count=14}\n``` {.python .cell-code}\ncox1 = CoxPHFitter()\ndf_dummy_sub = df_dummy.drop('ecog.ps_Good', axis = 1)\ncox1.fit(df_dummy_sub, duration_col = 'futime', event_col = 'fustat')\ncox1.print_summary()\ncox1.AIC_partial_\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>model</th>\n      <td>lifelines.CoxPHFitter</td>\n    </tr>\n    <tr>\n      <th>duration col</th>\n      <td>'futime'</td>\n    </tr>\n    <tr>\n      <th>event col</th>\n      <td>'fustat'</td>\n    </tr>\n    <tr>\n      <th>baseline estimation</th>\n      <td>breslow</td>\n    </tr>\n    <tr>\n      <th>number of observations</th>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>number of events observed</th>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>partial log-likelihood</th>\n      <td>-29.33</td>\n    </tr>\n    <tr>\n      <th>time fit was run</th>\n      <td>2025-08-03 06:50:55 UTC</td>\n    </tr>\n  </tbody>\n</table>\n</div><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th style=\"min-width: 12px;\"></th>\n      <th style=\"min-width: 12px;\">coef</th>\n      <th style=\"min-width: 12px;\">exp(coef)</th>\n      <th style=\"min-width: 12px;\">se(coef)</th>\n      <th style=\"min-width: 12px;\">coef lower 95%</th>\n      <th style=\"min-width: 12px;\">coef upper 95%</th>\n      <th style=\"min-width: 12px;\">exp(coef) lower 95%</th>\n      <th style=\"min-width: 12px;\">exp(coef) upper 95%</th>\n      <th style=\"min-width: 12px;\">cmp to</th>\n      <th style=\"min-width: 12px;\">z</th>\n      <th style=\"min-width: 12px;\">p</th>\n      <th style=\"min-width: 12px;\">-log2(p)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>age_&gt;50</th>\n      <td>2.11</td>\n      <td>8.29</td>\n      <td>1.09</td>\n      <td>-0.02</td>\n      <td>4.25</td>\n      <td>0.98</td>\n      <td>70.32</td>\n      <td>0.00</td>\n      <td>1.94</td>\n      <td>0.05</td>\n      <td>4.25</td>\n    </tr>\n    <tr>\n      <th>resid.ds_Yes</th>\n      <td>1.25</td>\n      <td>3.50</td>\n      <td>0.69</td>\n      <td>-0.10</td>\n      <td>2.61</td>\n      <td>0.90</td>\n      <td>13.58</td>\n      <td>0.00</td>\n      <td>1.81</td>\n      <td>0.07</td>\n      <td>3.83</td>\n    </tr>\n    <tr>\n      <th>rx_B</th>\n      <td>-1.28</td>\n      <td>0.28</td>\n      <td>0.62</td>\n      <td>-2.50</td>\n      <td>-0.06</td>\n      <td>0.08</td>\n      <td>0.94</td>\n      <td>0.00</td>\n      <td>-2.06</td>\n      <td>0.04</td>\n      <td>4.67</td>\n    </tr>\n  </tbody>\n</table><br><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>Concordance</th>\n      <td>0.77</td>\n    </tr>\n    <tr>\n      <th>Partial AIC</th>\n      <td>64.66</td>\n    </tr>\n    <tr>\n      <th>log-likelihood ratio test</th>\n      <td>11.31 on 3 df</td>\n    </tr>\n    <tr>\n      <th>-log2(p) of ll-ratio test</th>\n      <td>6.62</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=14}\n```\n64.65793573545281\n```\n:::\n:::\n\n\n剔除 `ecog_ps` 后的模型， AIC 值有所下降，但是不多（谨慎对待），能认为新模型优于原有模型。\n\n",
    "supporting": [
      "25-03-09-cos-reg_files\\figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdn.jsdelivr.net/npm/requirejs@2.3.6/require.min.js\" integrity=\"sha384-6V1/AdqZRWk1KAlWbKBlGhN7VG4iE/yAZcO6NZPMF8od0vukrvr0tg4qY6NSrItx\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js\" integrity=\"sha384-ZvpUoO/+PpLXR1lu4jmpXWu80pZlYUAfxl5NsBMWOEPSjUn/6Z/hRTt8+pR6L4N2\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}